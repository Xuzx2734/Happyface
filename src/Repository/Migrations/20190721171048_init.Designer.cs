// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190721171048_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Models.ClassModel", b =>
                {
                    b.Property<int>("classid_")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("delflag_");

                    b.Property<DateTime>("idate_");

                    b.Property<string>("name_")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("pid_");

                    b.Property<int>("sort_");

                    b.Property<DateTime>("udate_");

                    b.HasKey("classid_");

                    b.ToTable("t_class");
                });

            modelBuilder.Entity("Entities.Models.DocModel", b =>
                {
                    b.Property<int>("docid_")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("class_");

                    b.Property<string>("content_");

                    b.Property<DateTime>("delflag_");

                    b.Property<string>("function_")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("name_");

                    b.Property<string>("title_")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("type_");

                    b.Property<int>("userid_");

                    b.HasKey("docid_");

                    b.HasIndex("class_");

                    b.HasIndex("name_");

                    b.HasIndex("userid_");

                    b.ToTable("t_doc");
                });

            modelBuilder.Entity("Entities.Models.GroupsModel", b =>
                {
                    b.Property<int>("groupid_")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("comment_")
                        .HasMaxLength(100);

                    b.Property<int>("delflag_");

                    b.Property<DateTime>("idate_");

                    b.Property<string>("name_")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("udate_");

                    b.HasKey("groupid_");

                    b.ToTable("t_groups");
                });

            modelBuilder.Entity("Entities.Models.ParameterModel", b =>
                {
                    b.Property<int>("parameterid_")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("comment_")
                        .HasMaxLength(100);

                    b.Property<int>("delflag_");

                    b.Property<int>("docid_");

                    b.Property<DateTime>("idate_");

                    b.Property<string>("parameter_")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("type_");

                    b.Property<DateTime>("udate_");

                    b.HasKey("parameterid_");

                    b.HasIndex("docid_");

                    b.ToTable("t_parameter");
                });

            modelBuilder.Entity("Entities.Models.ProjectGroupModel", b =>
                {
                    b.Property<int>("projectgroupid_")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("groupid_");

                    b.Property<int>("projectid_");

                    b.HasKey("projectgroupid_");

                    b.HasIndex("groupid_");

                    b.HasIndex("projectid_");

                    b.ToTable("t_projectgroup");
                });

            modelBuilder.Entity("Entities.Models.ProjectModel", b =>
                {
                    b.Property<int>("projectid_")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("comment_")
                        .HasMaxLength(100);

                    b.Property<int>("delflag_");

                    b.Property<DateTime>("idate_");

                    b.Property<string>("name_")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("state_");

                    b.Property<DateTime>("udate_");

                    b.Property<int>("userid_");

                    b.HasKey("projectid_");

                    b.ToTable("t_project");
                });

            modelBuilder.Entity("Entities.Models.UserGroupModel", b =>
                {
                    b.Property<int>("usergroupid_")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("delflag_");

                    b.Property<int>("groupid_");

                    b.Property<DateTime>("idate_");

                    b.Property<DateTime>("udate_");

                    b.Property<int>("userid_");

                    b.HasKey("usergroupid_");

                    b.HasIndex("groupid_");

                    b.HasIndex("userid_");

                    b.ToTable("t_usergroup");
                });

            modelBuilder.Entity("Entities.Models.UsersModel", b =>
                {
                    b.Property<int>("userid_")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code_")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("delflag_");

                    b.Property<string>("email_")
                        .HasMaxLength(20);

                    b.Property<DateTime>("idate_");

                    b.Property<string>("name_")
                        .HasMaxLength(50);

                    b.Property<string>("pass_")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("udate_");

                    b.HasKey("userid_");

                    b.ToTable("t_users");
                });

            modelBuilder.Entity("Entities.Models.ValuesModel", b =>
                {
                    b.Property<int>("valuesid_")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content_");

                    b.Property<int>("delflag_");

                    b.Property<int>("docid_");

                    b.Property<DateTime>("idate_");

                    b.Property<int>("link_");

                    b.Property<int>("type_");

                    b.Property<DateTime>("udate_");

                    b.HasKey("valuesid_");

                    b.HasIndex("docid_");

                    b.ToTable("t_values");
                });

            modelBuilder.Entity("Entities.Models.DocModel", b =>
                {
                    b.HasOne("Entities.Models.ClassModel", "Class")
                        .WithMany("Docs")
                        .HasForeignKey("class_")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Models.ProjectModel", "Project")
                        .WithMany("Docs")
                        .HasForeignKey("name_")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Models.UsersModel", "User")
                        .WithMany("Docs")
                        .HasForeignKey("userid_")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.ParameterModel", b =>
                {
                    b.HasOne("Entities.Models.DocModel", "Doc")
                        .WithMany("Parameters")
                        .HasForeignKey("docid_")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.ProjectGroupModel", b =>
                {
                    b.HasOne("Entities.Models.GroupsModel", "Group")
                        .WithMany("ProjectGroups")
                        .HasForeignKey("groupid_")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Models.ProjectModel", "Project")
                        .WithMany("ProjectGroups")
                        .HasForeignKey("projectid_")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.UserGroupModel", b =>
                {
                    b.HasOne("Entities.Models.GroupsModel", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("groupid_")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Models.UsersModel", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("userid_")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.ValuesModel", b =>
                {
                    b.HasOne("Entities.Models.DocModel", "Doc")
                        .WithMany("Values")
                        .HasForeignKey("docid_")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
